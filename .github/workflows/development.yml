name: Quality Gate

# CI Pipeline para verificar calidad de c√≥digo
# Ejecuta: linting, tests, build, security audit
# Falla si: formato incorrecto, errores de linting, tests fallidos, build fallido
# No falla por: vulnerabilidades de seguridad conocidas

on:
  pull_request:
    branches: [main, development]
  push:
    branches: [main, development]

permissions:
  contents: read

jobs:
  quality:
    runs-on: ubuntu-latest
    env:
      CI: true

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: '**/package-lock.json'

      - name: Install deps
        run: |
          npm ci || npm install

      - name: Verify Node.js and npm versions
        run: |
          echo "Node.js version: $(node --version)"
          echo "npm version: $(npm --version)"
          echo "Package Node.js requirement: $(grep '"node"' package.json | head -1)"

      - name: Prettier (check)
        run: npm run format

      - name: ESLint
        run: npm run lint

      - name: Type Check
        run: npm run typecheck

      - name: Security audit (high+)
        run: npm run audit
        continue-on-error: true # No fallar por vulnerabilidades conocidas

      - name: Run unit tests
        run: npm run test

      - name: Publicar cobertura (si existe)
        if: ${{ always() }}
        uses: actions/upload-artifact@v4
        with:
          name: test-coverage
          path: coverage/**
          if-no-files-found: ignore

      - name: Upload build artifacts
        if: ${{ always() }}
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: |
            dist/**
            apps/**/dist/**
          if-no-files-found: ignore

      - name: Upload logs on failure
        if: ${{ failure() }}
        uses: actions/upload-artifact@v4
        with:
          name: ci-failure-logs
          path: |
            *.log
            **/*.log
          if-no-files-found: ignore

      - name: Build all apps (production)
        run: npm run build:all

      - name: CI Quality Gate Summary
        if: ${{ success() }}
        run: |
          echo "üéâ CI Quality Gate PASSED!"
          echo "‚úÖ Code formatting: PASSED"
          echo "‚úÖ Linting: PASSED"
          echo "‚úÖ Type checking: PASSED"
          echo "‚úÖ Unit tests: PASSED"
          echo "‚úÖ Production build: PASSED"
          echo ""
          echo "‚ö†Ô∏è  Security audit: Check output above (may have warnings)"
          echo ""
          echo "üöÄ Ready for deployment!"
